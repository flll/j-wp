
server {
    listen 80;
    listen [::]:80;
    server_name ${DOMAINNAME};
    charset UTF-8;

    return 301 https://$host$request_uri;

    server_tokens off;

}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${DOMAINNAME};
    charset UTF-8;

    server_tokens off;

    ssl_certificate      /lego/certificates/${DOMAINNAME}.crt;
    ssl_certificate_key  /lego/certificates/${DOMAINNAME}.key;

    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets on;
    ssl_session_ticket_key /lego/tls_session_ticket.key;

    ssl_dhparam /lego/dhparam;
    ssl_ecdh_curve secp384r1;
    # 0-RTT
    ssl_early_data on;

    ssl_protocols TLSv1.3 TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    client_max_body_size 20M;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /lego/certificates/${DOMAINNAME}.issuer.crt;

    # replace with the IP address of your resolver
    resolver 127.0.0.11 ipv6=off;
    resolver_timeout 3s;

    # HSTS (ngx_http_headers_module is required) (31536000 seconds 1year)
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload' always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    gzip off;
    error_log  /log/${SITE_NAME}/error.log debug;
    
    root /nginx.d/${SITE_NAME};
    index index.php index.html index.htm;

    ## 以下wordpress設定関連 依存
    location ~* /wp-config.php {
        deny all;
    }

    location / {
      try_files $uri $uri/ @wordpress;
    }
 
    location ~ \.php$ {
      try_files $uri @wordpress;
      fastcgi_index index.php;
      fastcgi_split_path_info ^(.+\.php)(.*)$;
      fastcgi_pass ${SITE_NAME}_wp:9000;
      fastcgi_param SCRIPT_FILENAME /var/www/html/$fastcgi_script_name; # wordpressコンテナ内のディレクトリを指定すること
      include fastcgi_params;
    }

    location @wordpress {
      fastcgi_index index.php;
      fastcgi_split_path_info ^(.+\.php)(.*)$;
      fastcgi_pass ${SITE_NAME}_wp:9000;
      fastcgi_param SCRIPT_FILENAME /var/www/html/index.php; # wordpressコンテナ内のディレクトリを指定すること
      include fastcgi_params;
    }
}
